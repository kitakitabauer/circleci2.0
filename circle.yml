version: 2
jobs:
  build:
    docker:
      - image: circleci/golang:1.8.2
        environment:
          TZ: "/usr/share/zoneinfo/Asia/Tokyo"
      - image: redis:alpine
      - image: mongo:3.0

    working_directory: /go/src/github.com/kitakitabauer/circleci2.0

    environment:
      TZ: "/usr/share/zoneinfo/Asia/Tokyo"

    steps:
      - checkout

      - run:
          name: Setup For Test
          command: |
            go version
            make setup

      - run:
          name: Run Tests
          command: |
            make cover

      - deploy:
          name: Deploy Request
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              branch=${CIRCLE_BRANCH}
            elif  [[ "${CIRCLE_TAG}" =~ v.* ]]; then
              branch=${CIRCLE_TAG}
            fi

            if [ -n "${branch}" ]; then
              curl --user ${CIRCLE_API_TOKEN}: \
                --data build_parameters[CIRCLE_JOB]=deploy \
                --data revision=${CIRCLE_SHA1} \
                https://circleci.com/api/v1.1/project/github/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/tree/${branch} \
                >> /dev/null
            fi

  deploy:
    docker:
      - image: circleci/python:3.6.1
        environment:
          TZ: "/usr/share/zoneinfo/Asia/Tokyo"

    working_directory: /tmp/github.com/kitakitabauer/circleci2.0

    environment:
      TZ: "/usr/share/zoneinfo/Asia/Tokyo"

    steps:
      - checkout

      - setup_remote_docker

      - run:
          command: |
            docker container ls -a

      - run:
          name: Install dependencies
          command: |
            sudo pip install awscli

      - restore_cache:
          keys:
            - v1-{{ .Branch }}
          paths:
            - /tmp/caches/app.tar
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i /tmp/caches/app.tar | true
      - run:
          name: Build application Docker image
          command: |
            docker build --cache-from=app -t app .
      - run:
          name: Save Docker image layer cache
          command: |
            mkdir -p /tmp/caches
            docker save -o /tmp/caches/app.tar app
      - save_cache:
          key: v1-{{ .Branch }}-{{ epoch }}
          paths:
            - /tmp/caches/app.tar

      - deploy:
          name: Deploy
          command: |
            echo "Deploy!!!!!!!"
            echo ${CIRCLE_BRANCH}
            echo ${CIRCLE_TAG}
            docker -v
            eval $(aws ecr get-login --no-include-email --region ap-northeast-1)

            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              echo "ますたー!!!!!!"
            elif [[ "${CIRCLE_BRANCH}" =~ release-v.* ]]; then
              echo "productionやねん"
            elif [[ "${CIRCLE_BRANCH}" =~ v.* ]]; then
              echo "stagingやねん"
            fi

deployment:
  fake_deploy_for_cci2:
    tag: /.*/
    commands: echo "make tags run in 2.0"
